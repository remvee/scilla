<project name="scilla" default="compile" basedir=".">

<!-- configuration -->
  <property name="lame.exec"    value="/usr/local/bin/lame"/>
  <property name="imagick.exec" value="/usr/local/bin/convert"/>
  <property name="ffmpeg.exec"  value="/usr/local/bin/ffmpeg"/>
  <property name="cache.dir"    value="NoNsEnsIcAlVaLuE"/>
  <property name="source.dir"   value="nOnSeNSiCaLvAlUe"/>

<!-- tool configuration -->
  <property name="ctags.exec"     value="exctags"/>
  <property name="cvs2cl.exec"    value="cvs2cl"/>
  <property name="build.compiler" value="jikes"/>

<!-- dependencies -->
  <property name="log4j.version" value="jakarta-log4j-1.1.3"/>
  <property name="log4j.url" value="http://jakarta.apache.org/log4j/${log4j.version}.tar.gz"/>
  <property name="log4j.jar" value="${log4j.version}/dist/lib/log4j.jar"/>

<!-- building sites -->
  <property name="src.dir"      value="src"/>
  <property name="lib.dir"      value="lib"/>
  <property name="build.dir"    value="build"/>
  <property name="download.dir" value="${build.dir}/download"/>
  <property name="expand.dir"   value="${download.dir}/expanded"/>
  <property name="jar.file"     value="scilla.jar"/>

<!-- for documentation building -->
  <property name="doc.dir"      value="doc"/>
  <property name="doc.title"    value="scilla API documentation"/>
  <property name="doc.pkgnames" value="org.scilla.*"/>

<!-- the configuration template -->
  <property name="config.propfile" value="org/scilla/Config.properties"/>


<!-- targets -->
  <target name="prepare">
    <mkdir dir="${lib.dir}"/>
    <mkdir dir="${doc.dir}"/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${download.dir}"/>
    <mkdir dir="${expand.dir}"/>
    <available property="jai.available" classname="javax.media.jai.JAI"/>
    <available property="log4j.available" file="${lib.dir}/log4j.jar"/>
    <available property="log4j.present" file="${expand.dir}/${log4j.jar}"/>
  </target>

  <target name="prepare.compile" depends="prepare,prepare.log4j">
    <available property="dummy" classname="dummy">
      <classpath id="compile.classpath">
	<fileset dir="${lib.dir}">
	  <include name="*.jar"/>
	</fileset>
      </classpath>
    </available>
  </target>

  <target name="prepare.log4j" unless="log4j.available">
    <copy file="${expand.dir}/${log4j.jar}" tofile="${lib.dir}/log4j.jar"/>
  </target>

  <target name="download.log4j" unless="log4j.present">
    <get src="${log4j.url}" dest="${download.dir}/${log4j.version}.tgz" verbose="on"/>
    <gunzip src="${download.dir}/${log4j.version}.tgz" dest="${expand.dir}/${log4j.version}.tar"/>
    <untar src="${expand.dir}/${log4j.version}.tar" dest="${expand.dir}"/>
    <delete file="${expand.dir}/${log4j.version}.tar"/>
  </target>

  <target name="compile" depends="prepare.compile,compile.all,compile.nojai">
    <copy todir="${build.dir}">
      <fileset dir="${src.dir}">
	<include name="**/*.properties"/>
      </fileset>
    </copy>
  </target>

  <target name="compile.nojai" unless="jai.present">
    <javac srcdir="${src.dir}" destdir="${build.dir}"
	classpathref="compile.classpath" excludes="**/JAI*"/>
  </target>

  <target name="compile.all" if="jai.present">
    <javac srcdir="${src.dir}" destdir="${build.dir}"
	classpathref="compile.classpath"/>
  </target>

  <!-- replace tokens in config property file
       delete file to make sure new property values are set -->
  <target name="config" depends="prepare">
    <delete file="${build.dir}/${config.propfile}"/>
    <copy file="${src.dir}/${config.propfile}"
        tofile="${build.dir}/${config.propfile}"/>
    <replace file="${build.dir}/${config.propfile}"
        token="@source.dir@" value="${source.dir}"/>
    <replace file="${build.dir}/${config.propfile}"
        token="@cache.dir@" value="${cache.dir}"/>
    <replace file="${build.dir}/${config.propfile}"
        token="@imagick.exec@" value="${imagick.exec}"/>
    <replace file="${build.dir}/${config.propfile}"
        token="@lame.exec@" value="${lame.exec}"/>
    <replace file="${build.dir}/${config.propfile}"
        token="@ffmpeg.exec@" value="${ffmpeg.exec}"/>
  </target>

  <target name="jar" depends="compile,config">
    <jar jarfile="${jar.file}" basedir="${build.dir}"/>
  </target>

  <target name="doc" depends="prepare">
    <javadoc sourcepath="${src.dir}" destdir="${doc.dir}"
	windowtitle="${doc.title}" packagenames="${doc.pkgnames}"/>
  </target>

  <target name="ctags">
    <exec executable="${ctags.exec}">
      <arg value="-R"/>
      <arg value="${src.dir}"/>
    </exec>
  </target>

  <target name="changelog">
    <exec executable="${cvs2cl.exec}">
      <arg value="-P"/>
    </exec>
    <exec executable="${cvs2cl.exec}">
      <arg value="-P"/>
      <arg value="--xml"/>
      <arg value="-f"/>
      <arg value="ChangeLog.xml"/>
    </exec>
    <!-- hack to prevent interpretation of xmlns in source xml -->
    <replace file="ChangeLog.xml" token="xmlns" value="dummy"/>
    <style style="misc/changelog-html.xsl" in="ChangeLog.xml" out="ChangeLog.html"/>
  </target>

  <target name="clean">
    <delete quiet="true">
      <fileset dir="." includes="ChangeLog*"/>
      <fileset dir="." includes="**/*.bak"/>
    </delete>
    <delete dir="${build.dir}"/>
    <delete dir="${doc.dir}"/>
    <delete file="${jar.file}"/>
    <delete file="tags"/>
  </target>

</project>
